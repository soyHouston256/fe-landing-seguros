---
// Hero.astro - Sección principal con formulario funcional
---

<section class="py-16 px-4 sm:px-6 lg:px-8">
  <div class="max-w-7xl mx-auto">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
      <!-- Contenido izquierdo -->
      <div class="space-y-8">
        <div>
          <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-800 leading-tight">
            Protege tu salud y la<br>
            <span class="text-pacifico-blue">de los que más quieres</span>
          </h1>
        </div>
        
        <!-- Formulario -->
        <div class="bg-white rounded-2xl shadow-xl p-8 max-w-md">
          <form id="leadForm" class="space-y-4">
            <!-- Mensajes de estado -->
            <div id="formMessage" class="hidden p-4 rounded-lg text-sm font-medium"></div>
            
            <div>
              <input 
                type="text" 
                id="name"
                name="name"
                placeholder="Ingresa nombre" 
                required
                class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-pacifico-blue focus:border-transparent"
              />
            </div>
            
            <div>
              <input 
                type="text" 
                id="lastname"
                name="lastname"
                placeholder="Ingresa apellido" 
                required
                class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-pacifico-blue focus:border-transparent"
              />
            </div>
            
            <div class="flex space-x-2">
              <select 
                id="documentType"
                name="documentType"
                required
                class="px-3 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-pacifico-blue"
              >
                <option value="DNI">DNI</option>
                <option value="CE">CE</option>
                <option value="Pasaporte">Pasaporte</option>
              </select>
              <input 
                type="text" 
                id="documentNumber"
                name="documentNumber"
                placeholder="Número de documento" 
                required
                pattern="[0-9]{8,12}"
                class="flex-1 px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-pacifico-blue focus:border-transparent"
              />
            </div>
            
            <div>
              <input 
                type="tel" 
                id="phone"
                name="phone"
                placeholder="n° de celular" 
                required
                pattern="[0-9]{9,12}"
                class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-pacifico-blue focus:border-transparent"
              />
            </div>
            
            <div>
              <input 
                type="email" 
                id="email"
                name="email"
                placeholder="Ingresa email" 
                required
                class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-pacifico-blue focus:border-transparent"
              />
            </div>
            
            <div class="flex items-start space-x-2">
              <input 
                type="checkbox" 
                id="terms"
                name="terms"
                required
                class="mt-1 w-4 h-4 text-pacifico-blue border-gray-300 rounded focus:ring-pacifico-blue"
              />
              <label for="terms" class="text-xs text-gray-500 leading-relaxed">
                Al continuar, acepto los <a href="#" class="text-pacifico-blue underline">Términos y Condiciones</a> 
                <a href="#" class="text-pacifico-blue underline">revisalos aquí</a>. 
                En breve, un asesor te contactará para ayudarte a encontrar la mejor protección para tu salud.
              </label>
            </div>
            
            <button 
              type="submit" 
              id="submitBtn"
              class="w-full bg-pacifico-pink text-white py-3 rounded-lg hover:bg-pink-600 transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed"
            >
              <span class="btn-text">Solicítalo aquí</span>
              <span class="btn-loading hidden">
                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Enviando...
              </span>
            </button>
          </form>
        </div>
      </div>
      
      <!-- Imagen derecha -->
      <div class="relative">
        <div class="relative z-10">
          <img 
            src="/family-image.jpg" 
            alt="Familia feliz" 
            class="w-full h-auto rounded-2xl shadow-2xl"
          />
          <!-- Badge flotante -->
          <div class="absolute -bottom-4 -right-4 bg-white rounded-xl shadow-lg p-4 flex items-center space-x-3">
            <div class="w-12 h-12 bg-pacifico-blue rounded-lg flex items-center justify-center">
              <span class="text-white font-bold">P</span>
            </div>
            <div>
              <div class="text-sm font-medium text-gray-800">Seguros de <strong>Salud</strong></div>
              <div class="text-xs text-gray-500">pacífico</div>
            </div>
          </div>
        </div>
        
        <!-- Decoración de fondo -->
        <div class="absolute inset-0 bg-gradient-to-br from-pacifico-light-blue/20 to-pacifico-pink/20 rounded-2xl transform rotate-3 -z-10"></div>
      </div>
    </div>
  </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('leadForm') as HTMLFormElement;
  const submitBtn = document.getElementById('submitBtn') as HTMLButtonElement;
  const btnText = submitBtn.querySelector('.btn-text') as HTMLElement;
  const btnLoading = submitBtn.querySelector('.btn-loading') as HTMLElement;
  const formMessage = document.getElementById('formMessage') as HTMLElement;

  // Función para mostrar mensajes
  function showMessage(message: string, type: 'success' | 'error') {
    formMessage.className = `p-4 rounded-lg text-sm font-medium ${
      type === 'success' 
        ? 'bg-green-100 text-green-800 border border-green-200' 
        : 'bg-red-100 text-red-800 border border-red-200'
    }`;
    formMessage.textContent = message;
    formMessage.classList.remove('hidden');
    
    // Auto-hide después de 5 segundos
    setTimeout(() => {
      formMessage.classList.add('hidden');
    }, 5000);
  }

  // Función para toggle loading state
  function setLoading(loading: boolean) {
    submitBtn.disabled = loading;
    
    if (loading) {
      btnText.classList.add('hidden');
      btnLoading.classList.remove('hidden');
    } else {
      btnText.classList.remove('hidden');
      btnLoading.classList.add('hidden');
    }
  }

  // Validaciones en tiempo real
  const inputs = form.querySelectorAll('input[required], select[required]');
  inputs.forEach(input => {
    input.addEventListener('blur', function() {
      validateField(input as HTMLInputElement);
    });
  });

  function validateField(field: HTMLInputElement) {
    const value = field.value.trim();
    let isValid = true;
    let errorMessage = '';

    // Validaciones específicas
    switch (field.name) {
      case 'email':
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (value && !emailRegex.test(value)) {
          isValid = false;
          errorMessage = 'Formato de email inválido';
        }
        break;
      case 'documentNumber':
        if (value && value.length < 8) {
          isValid = false;
          errorMessage = 'Debe tener al menos 8 dígitos';
        }
        break;
      case 'phone':
        if (value && value.length < 9) {
          isValid = false;
          errorMessage = 'Debe tener al menos 9 dígitos';
        }
        break;
    }

    // Aplicar estilos de validación
    if (!isValid) {
      field.classList.add('border-red-500', 'focus:ring-red-500');
      field.classList.remove('border-gray-200', 'focus:ring-pacifico-blue');
    } else {
      field.classList.remove('border-red-500', 'focus:ring-red-500');
      field.classList.add('border-gray-200', 'focus:ring-pacifico-blue');
    }

    return isValid;
  }

  // Manejar envío del formulario
  form.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    // Validar todos los campos
    let allValid = true;
    inputs.forEach(input => {
      if (!validateField(input as HTMLInputElement)) {
        allValid = false;
      }
    });

    if (!allValid) {
      showMessage('Por favor corrige los errores en el formulario', 'error');
      return;
    }

    setLoading(true);
    formMessage.classList.add('hidden');

    try {
      // Recopilar datos del formulario
      const formData = new FormData(form);
      const leadData = {
        name: formData.get('name') as string,
        lastname: formData.get('lastname') as string,
        documentType: formData.get('documentType') as string,
        documentNumber: formData.get('documentNumber') as string,
        phone: formData.get('phone') as string,
        email: formData.get('email') as string
      };

      // Enviar a la API
      const response = await fetch('http://localhost:3000/api/lead', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(leadData)
      });

      const result = await response.json();

      if (result.success) {
        showMessage('¡Gracias! Hemos recibido tu información. Un asesor se contactará contigo pronto.', 'success');
        form.reset();
        
        // Analytics o tracking
        console.log('Lead enviado exitosamente:', result.leadId);
        
      } else {
        showMessage(result.error || 'Hubo un error al enviar tu información. Intenta nuevamente.', 'error');
      }

    } catch (error) {
      console.error('Error enviando formulario:', error);
      showMessage('Error de conexión. Por favor verifica tu internet e intenta nuevamente.', 'error');
    } finally {
      setLoading(false);
    }
  });
});
</script>
